/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * plotPanel.java
 *
 * Created on Nov 30, 2010, 11:39:37 PM
 */

package eGraph;

import java.awt.event.ActionEvent;

/**
 *
 * @author Admin
 */
public class PlotPanel extends javax.swing.JPanel {

    /** Creates new form plotPanel */
    public PlotPanel() {
        initComponents();
        xInvertBox.setVisible(false);
        yInvertBox.setVisible(false);
        yInterceptInvertBox.setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        yCheckBox = new javax.swing.JCheckBox();
        xCheckBox = new javax.swing.JCheckBox();
        y_interceptCheckBox = new javax.swing.JCheckBox();
        yInterceptSpinner = new javax.swing.JSpinner();
        ySpinner = new javax.swing.JSpinner();
        xSpinner = new javax.swing.JSpinner();
        upButton = new javax.swing.JButton();
        downButton = new javax.swing.JButton();
        yInvertBox = new javax.swing.JCheckBox();
        xInvertBox = new javax.swing.JCheckBox();
        yInterceptInvertBox = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        quadrantSpinner = new javax.swing.JSpinner();
        numbersBox = new javax.swing.JCheckBox();
        ghostCheckBox = new javax.swing.JCheckBox();
        jToolBar1 = new javax.swing.JToolBar();
        refreshButton = new javax.swing.JButton();
        lineBox = new javax.swing.JCheckBox();
        paperPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36));
        jLabel1.setText("x +");
        jLabel1.setToolTipText("y=mx+b");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 40, -1, 50));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 68, 60, 10));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 36));
        jLabel2.setText("y=");
        jLabel2.setToolTipText("y=mx+b");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, -1, 40));

        yCheckBox.setBackground(new java.awt.Color(255, 255, 255));
        yCheckBox.setToolTipText("Include numerator in change");
        jPanel2.add(yCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, 40, 40));

        xCheckBox.setBackground(new java.awt.Color(255, 255, 255));
        xCheckBox.setToolTipText("Include denominator in change");
        xCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xCheckBoxActionPerformed(evt);
            }
        });
        jPanel2.add(xCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 80, 40, 40));

        y_interceptCheckBox.setBackground(new java.awt.Color(255, 255, 255));
        y_interceptCheckBox.setToolTipText("Include y-intercept in change");
        jPanel2.add(y_interceptCheckBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 20, 20));

        yInterceptSpinner.setFont(new java.awt.Font("Tahoma", 1, 18));
        yInterceptSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), null, null, Integer.valueOf(1)));
        yInterceptSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                yInterceptSpinnerStateChanged(evt);
            }
        });
        jPanel2.add(yInterceptSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 60, 40));

        ySpinner.setFont(new java.awt.Font("Tahoma", 1, 18));
        ySpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(3), null, null, Integer.valueOf(1)));
        ySpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                ySpinnerStateChanged(evt);
            }
        });
        jPanel2.add(ySpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 60, 40));

        xSpinner.setFont(new java.awt.Font("Tahoma", 1, 18));
        xSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(2), null, null, Integer.valueOf(1)));
        xSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                xSpinnerStateChanged(evt);
            }
        });
        jPanel2.add(xSpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 60, 40));

        upButton.setFont(new java.awt.Font("Tahoma", 1, 14));
        upButton.setText("+");
        upButton.setToolTipText("Change by increasing");
        upButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });
        jPanel2.add(upButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 28, 30, 40));

        downButton.setFont(new java.awt.Font("Tahoma", 1, 14));
        downButton.setText("-");
        downButton.setToolTipText("Change by decreasing");
        downButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        downButton.setPreferredSize(new java.awt.Dimension(25, 27));
        downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downButtonActionPerformed(evt);
            }
        });
        jPanel2.add(downButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, 30, 40));

        yInvertBox.setBackground(new java.awt.Color(0, 51, 51));
        yInvertBox.setToolTipText("Invert change rate");
        jPanel2.add(yInvertBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 20, -1));

        xInvertBox.setBackground(new java.awt.Color(0, 51, 51));
        xInvertBox.setToolTipText("Invert change rate");
        jPanel2.add(xInvertBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        yInterceptInvertBox.setBackground(new java.awt.Color(0, 51, 51));
        yInterceptInvertBox.setToolTipText("Invert change rate");
        jPanel2.add(yInterceptInvertBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, -1, -1));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel3KeyPressed(evt);
            }
        });

        jLabel3.setText("Quadrant Range");

        quadrantSpinner.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(8), null, null, Integer.valueOf(1)));
        quadrantSpinner.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                quadrantSpinnerKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                quadrantSpinnerKeyTyped(evt);
            }
        });

        numbersBox.setSelected(true);
        numbersBox.setText("Show Numbers");
        numbersBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numbersBoxActionPerformed(evt);
            }
        });

        ghostCheckBox.setSelected(true);
        ghostCheckBox.setText("Show Ghost Points");
        ghostCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ghostCheckBoxActionPerformed(evt);
            }
        });

        jToolBar1.setRollover(true);

        refreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/res/synchronized.png"))); // NOI18N
        refreshButton.setMargin(new java.awt.Insets(2, 4, 2, 4));
        refreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshButtonActionPerformed(evt);
            }
        });
        jToolBar1.add(refreshButton);

        lineBox.setSelected(true);
        lineBox.setText("Show Line");
        lineBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lineBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 345, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ghostCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(quadrantSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE))
                            .addComponent(lineBox, javax.swing.GroupLayout.DEFAULT_SIZE, 229, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(numbersBox)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(quadrantSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(numbersBox)
                    .addComponent(lineBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ghostCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        paperPanel.setBackground(new java.awt.Color(255, 255, 255));
        paperPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        paperPanel.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(paperPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 749, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paperPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void xCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xCheckBoxActionPerformed

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
        int mod = evt.getModifiers();
        if ((mod & ActionEvent.CTRL_MASK) == ActionEvent.CTRL_MASK){
            boolean setting = true;
            if (xInvertBox.isVisible()) {
                    setting = false;
                }
            xInvertBox.setVisible(setting);
            yInvertBox.setVisible(setting);
            yInterceptInvertBox.setVisible(setting);
            return;
        }
        up();
    }//GEN-LAST:event_upButtonActionPerformed

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downButtonActionPerformed
        int mod = evt.getModifiers();
        if ((mod & ActionEvent.CTRL_MASK) == ActionEvent.CTRL_MASK){
            boolean setting = true;
            if (xInvertBox.isVisible()) {
                    setting = false;
                }
            xInvertBox.setVisible(setting);
            yInvertBox.setVisible(setting);
            yInterceptInvertBox.setVisible(setting);
            return;
        }
        down();
    }//GEN-LAST:event_downButtonActionPerformed

    private void numbersBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numbersBoxActionPerformed
        buildGraph();
    }//GEN-LAST:event_numbersBoxActionPerformed

    private void refreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshButtonActionPerformed

        
        buildGraph();
    }//GEN-LAST:event_refreshButtonActionPerformed

    private void ySpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_ySpinnerStateChanged
        buildGraph();
    }//GEN-LAST:event_ySpinnerStateChanged

    private void xSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_xSpinnerStateChanged
        buildGraph();
    }//GEN-LAST:event_xSpinnerStateChanged

    private void yInterceptSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_yInterceptSpinnerStateChanged
        buildGraph();
    }//GEN-LAST:event_yInterceptSpinnerStateChanged

    private void ghostCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ghostCheckBoxActionPerformed
        buildGraph();
    }//GEN-LAST:event_ghostCheckBoxActionPerformed

    private void lineBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lineBoxActionPerformed
        buildGraph();
    }//GEN-LAST:event_lineBoxActionPerformed

    private void quadrantSpinnerKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quadrantSpinnerKeyPressed

        
    }//GEN-LAST:event_quadrantSpinnerKeyPressed

    private void quadrantSpinnerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_quadrantSpinnerKeyTyped
        
    }//GEN-LAST:event_quadrantSpinnerKeyTyped

    private void jPanel3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel3KeyPressed
       
    }//GEN-LAST:event_jPanel3KeyPressed

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1KeyPressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
       
    }//GEN-LAST:event_formKeyPressed

    private void up(){
        int temp = 0;
        if (y_interceptCheckBox.isSelected()){
            temp = (Integer)yInterceptSpinner.getValue();
            if (yInterceptInvertBox.isSelected()){
                temp--;
            }else temp++;

            yInterceptSpinner.setValue(temp);
        }
        if (xCheckBox.isSelected()){
            temp = (Integer)xSpinner.getValue();
            if (xInvertBox.isSelected()){
                temp--;
            }else temp++;
            xSpinner.setValue(temp);
        }
        if (yCheckBox.isSelected()){
            temp = (Integer)ySpinner.getValue();
            if (yInvertBox.isSelected()){
                temp--;
            }else temp++;

            ySpinner.setValue(temp);
        }
        this.buildGraph();
    }
    private void down(){
        int temp = 0;

        if (y_interceptCheckBox.isSelected()){
            temp = (Integer)yInterceptSpinner.getValue();
            if (yInterceptInvertBox.isSelected()){
                temp++;
            }else temp--;
            yInterceptSpinner.setValue(temp);
        }
        if (xCheckBox.isSelected()){
            temp = (Integer)xSpinner.getValue();
            if (xInvertBox.isSelected()){
                temp++;
            }else temp--;
            xSpinner.setValue(temp);
        }
        if (yCheckBox.isSelected()){
            temp = (Integer)ySpinner.getValue();
            if (yInvertBox.isSelected()){
                temp++;
            }else temp--;
            ySpinner.setValue(temp);
        }
        this.buildGraph();
    }

    public void buildGraph(){
        int q = (Integer)quadrantSpinner.getValue();
        int x = (Integer)xSpinner.getValue();
        int y = (Integer)ySpinner.getValue();
        int yi = (Integer)yInterceptSpinner.getValue();

        /* y over x */
        /* Keep our slope "fraction" under control */
        
            if (y < 0 && x < 0) {
                y = y * -1;
                x = x * -1;                
            }

            xSpinner.setValue(x);
            ySpinner.setValue(y);
                 SlopePanel sp = 
                         new SlopePanel(q, numbersBox.isSelected(), ghostCheckBox.isSelected(),
                         lineBox.isSelected(), this.getSize(), x, y, yi);
        paperPanel.add(sp);
        this.validate();
        sp=null;
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton downButton;
    private javax.swing.JCheckBox ghostCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JCheckBox lineBox;
    private javax.swing.JCheckBox numbersBox;
    private javax.swing.JPanel paperPanel;
    private javax.swing.JSpinner quadrantSpinner;
    private javax.swing.JButton refreshButton;
    private javax.swing.JButton upButton;
    private javax.swing.JCheckBox xCheckBox;
    private javax.swing.JCheckBox xInvertBox;
    private javax.swing.JSpinner xSpinner;
    private javax.swing.JCheckBox yCheckBox;
    private javax.swing.JCheckBox yInterceptInvertBox;
    private javax.swing.JSpinner yInterceptSpinner;
    private javax.swing.JCheckBox yInvertBox;
    private javax.swing.JSpinner ySpinner;
    private javax.swing.JCheckBox y_interceptCheckBox;
    // End of variables declaration//GEN-END:variables

}
